@model IEnumerable<Product>
@{
    ViewBag.Title = "Index";

    List<Category> list = ViewBag.Categories;
    List<ImageGallery> listGallery = ViewBag.Gallery;
    IEnumerable<MvcCatalogue.Product> reversed = Model.Reverse().ToArray();
}

<h2>Search</h2>

@if (Model != null)
{
    using (Html.BeginForm("SearchText", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div style="margin-bottom:20px;">
            @Html.TextBox("searchText")<input type="submit" value="Search" />
        </div>
    }

    using (Html.BeginForm("Search", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(true)

        <div class="row">
            <div class="col-sm-2">
                <nav class="nav-sidebar">
                    <h4>Categories</h4>
                    <ul class="nav">
                        @foreach (var item in list)
                        {
                            <li><a href="/Products/Search?searchIndex=@item.CategoryId">@item.CategoryName</a></li>
                        }
                    </ul>
                </nav>
            </div>

            @if (User.IsInRole("Admin"))
            {
                @Html.ActionLink("Create", "Create", "Products", new { @class = "btn btn-default" })
            }
            <div class="col-sm-10">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Product Image</th>
                            <th>Product Name</th>
                            <th>Product Content</th>
                            <th>Product Price</th>
                            <th>Category</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in reversed)
                        {
                            <tr>
                                <td>
                                    @{
                                        ImageGallery listItem = listGallery.Where(m => m.ProductId == product.ProductsId).FirstOrDefault();

                                        if (listItem != null)
                                        {
                                            <img src="data:image/png;base64, @Convert.ToBase64String(listItem.ImageData, 0, listItem.ImageData.Length)" style="height: 100px; width: 130px;" />
                                        }
                                        else
                                        {
                                            <img src="~/Images/no-image.png" style="height: 100px; width: 130px;" />
                                        }
                                    }
                                </td>
                                <td>@product.ProductTitle</td>
                                <td>@product.ProductContent</td>
                                <td>@product.ProductPrice</td>
                                @{
                                    var categories = ViewBag.Categories;

                                    foreach (var item in categories)
                                    {
                                        if (item.CategoryId == product.CategoryId)
                                        {
                                            <td>@item.CategoryName</td>
                                        }
                                    }
                                }
                                <td>
                                    <div class="container">
                                        @Html.ActionLink("Details", "Details", "Products", new { id = product.ProductsId }, new { @class = "btn btn-default" })

                                        @if (User.IsInRole("Admin"))
                                        {
                                            <text> </text>
                                            @Html.ActionLink("Edit", "Edit", "Products", new { id = product.ProductsId }, new { @class = "btn btn-default" })

                                            <text> </text>
                                            @Html.ActionLink("Delete", "Delete", "Products", new { id = product.ProductsId }, new { @class = "btn btn-default" })
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
}

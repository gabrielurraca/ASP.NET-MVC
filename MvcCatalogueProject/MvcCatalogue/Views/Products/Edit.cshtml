@model MvcCatalogue.Product

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@if (User.IsInRole("Admin"))
{
    <p>
        @Html.ActionLink("Upload", "Upload", new { id = Model.ProductsId }, new { @class = "btn btn-default" })
    </p>
}

<table class="table">
    @{
        List<ImageGallery> list = ViewBag.Gallery;

        if (list.Count > 0)
        {
            for (int i = 0; i < list.Count(); i += 3)
            {
                int j = i;

                <tr>
                    @while (j < i + 3 && j < list.Count())
                    {
                        <td>
                            <a href="data:image/png;base64, @Convert.ToBase64String(list[j].ImageData, 0, list[j].ImageData.Length)" class="thumbnail" style="height: 220px;">
                                <img src="data:image/png;base64, @Convert.ToBase64String(list[j].ImageData, 0, list[j].ImageData.Length)" style="width:250px;height:200px;" />
                            </a>
                        </td>

                        j++;
                    }
                </tr>
            }
        }
        else
        {
            <tr>
                <td>
                    <img src="~/Images/no-image.png" style="height:100px; width:130px" />
                </td>
            </tr>
        }
    }
</table>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductsId)

        <div class="form-group">
            @Html.LabelFor(model => model.ProductTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductContent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ProductContent, 5, 40, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductContent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">                
                @Html.DropDownListFor(model => model.CategoryId, (SelectList)ViewBag.GetCategories, "- select -", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />

                @Html.ActionLink("Back to List", "Index", "Products", new { @class = "btn btn-default" })
            </div>
        </div>        
    </div>
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
